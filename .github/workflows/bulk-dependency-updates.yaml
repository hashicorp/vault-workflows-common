# Use like:

# name: Upgrade dependencies
# on:
#   workflow_dispatch:
#   schedule:
#     # Runs 12:00AM on the first of every month
#     - cron: '0 0 1 * *'
# jobs:
#   upgrade:
#     # using `main` as the ref will keep your workflow up-to-date
#     uses: hashicorp/vault-workflows-common/.github/workflows/bulk-dependency-updates.yaml@main
#     secrets:
#       VAULT_ECO_GITHUB_TOKEN: ${{ secrets.VAULT_ECO_GITHUB_TOKEN }}
#     with:
#       # either hashicorp/vault-ecosystem-applications or hashicorp/vault-ecosystem-foundations
#       repository: ${{ github.repository }}
#       run-id: ${{ github.run_id }}

name: Upgrade dependencies

on:
  workflow_call:
    inputs:
      reviewer-team:
        required: false
        type: string
        description: 'Deprecated; currently unused.'
      repository:
        required: true
        type: string
        description: 'The owner and repository name as per the github.repository context property.'
      run-id:
        required: true
        type: string
        description: 'The workflow run ID as per the github.run_id context property.'
    secrets:
      VAULT_ECO_GITHUB_TOKEN:
        required: true
        description: 'Should be different than the default GITHUB_TOKEN so that this workflow will trigger checks on the resulting PR.'

jobs:
  upgrade:
    name: Upgrade & Open Pull Request
    runs-on: ubuntu-latest
    env:
      # This branch will receive updates each time the workflow runs
      # It doesn't matter if it's deleted when merged, it'll be re-created
      BRANCH_NAME: auto-dependency-upgrades
      GITHUB_TOKEN: ${{ secrets.VAULT_ECO_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          # We don't use the default token so that checks are executed on the resulting PR
          # https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow
          token: ${{ secrets.VAULT_ECO_GITHUB_TOKEN }}
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: .go-version

      - name: Upgrade Go dependencies
        run: |
          go list -u -m -json all | jq -r 'select(.Indirect != true and .Update != null) | .Path+"@"+.Update.Version' | xargs -L1 go get
          go mod tidy

      - name: Detect changes
        id: changes
        run:
          # This output tells us if the dependencies have actually changed
          echo "count=$(git status --porcelain=v1 2>/dev/null | wc -l)" >> "$GITHUB_OUTPUT"

      - name: Commit & push changes
        # Only push if changes exist
        if: steps.changes.outputs.count > 0
        run: |
          git config user.name hc-github-team-secure-vault-ecosystem
          git config user.email hc-github-team-secure-vault-ecosystem@users.noreply.github.com
          git add .
          git commit -m "Automated dependency upgrades"
          git push -f origin ${{ github.ref_name }}:"$BRANCH_NAME"

      - name: Dispatch to vault
        if: steps.changes.outputs.count > 0
        run: |
          gh workflow run --repo hashicorp/vault plugin-update-check.yml \
            -f repo="${{ inputs.repository }}" \
            -f plugin_branch="$BRANCH_NAME"

      - name: Get go-mod-changelog script
        id: changelog
        run: |
          curl -o go-mod-changelog.py https://raw.githubusercontent.com/hashicorp/vault-workflows-common/main/go-mod-changelog.py
          chmod +x go-mod-changelog.py

      - name: Open pull request if needed
        if: steps.changes.outputs.count > 0
        # Only open a PR if the branch is not attached to an existing one
        run: |
          PR=$(gh pr list --head "$BRANCH_NAME" --json number -q '.[0].number')
          if [ -z "$PR" ]; then
            gh pr create \
            --head "$BRANCH_NAME" \
            --title "Automated dependency upgrades" \
            --label "dependencies"
          else
            echo "::notice::Pull request already exists, won't create a new one."
          fi

      - name: Update changelog blurb in PR body
        if: steps.changes.outputs.count > 0
        env:
          REPO: ${{ inputs.repository }}
          RUN_ID: ${{ inputs.run-id }}
        run: |
          PR=$(gh pr list --head "$BRANCH_NAME" --json number -q '.[0].number')

          if [ -n "$PR" ]; then
            gh pr update $PR \
            --body "Full log: https://github.com/$REPO/actions/runs/$RUN_ID

            $(./go-mod-changelog.py)
            "
          else
            echo "::error::Pull request #$PR not found."
          fi

