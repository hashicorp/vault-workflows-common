# use like:

# name: JIRA Sync
# on:
#   issues:
#     types: [opened, closed, deleted, reopened]
#   pull_request_target:
#     types: [opened, closed, reopened]
#   issue_comment: # Also triggers when commenting on a PR from the conversation view
#     types: [created]
# jobs:
#   sync:
#     # using `main` as the ref will keep your workflow up-to-date
#     uses: hashicorp/vault-workflows-common/.github/workflows/jira.yaml@main
#     # assuming you use Vault to get secrets
#     # if you use GitHub secrets, use secrets.XYZ instead of steps.secrets.outputs.XYZ
#     secrets:
#       JIRA_SYNC_BASE_URL: ${{ steps.secrets.outputs.JIRA_SYNC_BASE_URL }}
#       JIRA_SYNC_USER_EMAIL: ${{ steps.secrets.outputs.JIRA_SYNC_USER_EMAIL }}
#       JIRA_SYNC_API_TOKEN: ${{ steps.secrets.outputs.JIRA_SYNC_API_TOKEN }}
#     with:
#       teams-array: '["foundations-eco"]'

on:
  workflow_call:
    inputs:
      teams-array:
        required: true
        type: string
        description: 'JSON formatted array of teams to create issues with, e.g. ["ecosystem", "foundations"]. Must use double quotes for each element.'
    secrets:
      JIRA_SYNC_BASE_URL:
        required: true
      JIRA_SYNC_USER_EMAIL:
        required: true
      JIRA_SYNC_API_TOKEN:
        required: true

name: JIRA Sync

jobs:
  sync:
    runs-on: ubuntu-latest
    name: Jira sync
    steps:
    - name: Preprocess
      if: github.event.action == 'opened' || github.event.action == 'created'
      id: preprocess
      run: |
        if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
          echo "type=PR" >> "$GITHUB_OUTPUT"
        else
          echo "type=ISS" >> "$GITHUB_OUTPUT"
        fi

        echo "==> Determining team labels"
        teams_field='[]'
        for team in $(echo '${{ inputs.teams-array }}' | jq -r '.[]'); do
          if [[ "$team" == "applications" ]] || [[ "$team" == "foundations" ]]; then
            t="${team}-eco"
            echo "==> Found deprecated team label \"$team\", overwriting with \"$t\""
            # append team label to array
            teams_field="$(echo "$teams_field" | jq --compact-output --arg tt "$t" '. |= . + [$tt]')"
          fi
        done

        if [[ $(echo "${teams_field}" | jq 'length') == 0 ]]; then
          echo "==> No deprecated fields were overwritten, let labels passthrough"
          teams_field='${{ inputs.teams-array }}'
        fi

        echo "==> Using labels: $teams_field"
        echo "teams_array=${teams_field}" >> "$GITHUB_OUTPUT"

    - name: Create ticket
      if: |
        github.event.action == 'opened'
        && !(github.event.pull_request && contains(github.event.pull_request.labels.*.name, 'dependencies'))
        && (github.actor != 'dependabot[bot]')
        && !startsWith(github.head_ref, 'VAULT-' ) && !startsWith(github.head_ref, 'vault-' )
      uses: hashicorp/gh-action-jira-create@84c84ad564106f548729912dbda38d66ef117bb7 # v0.3.0
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_SYNC_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_SYNC_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_SYNC_API_TOKEN }}
      with:
        project: VAULT
        issuetype: "GH Issue"
        summary: "${{ github.event.repository.name }} [${{ steps.preprocess.outputs.type }} #${{ github.event.issue.number || github.event.pull_request.number }}]: ${{ github.event.issue.title || github.event.pull_request.title }}"
        description: "${{ github.event.issue.body || github.event.pull_request.body }}\n\n_Created from GitHub Action for ${{ github.event.issue.html_url || github.event.pull_request.html_url }} from ${{ github.actor }}_"
        # customfield_10089 is Issue Link custom field
        # customfield_10091 is team custom field
        extraFields: '{"fixVersions": [{"name": "TBD"}], "customfield_10091": ${{ steps.preprocess.outputs.teams_array }}, "customfield_10089": "${{ github.event.issue.html_url || github.event.pull_request.html_url }}"}'

    - name: Search
      if: github.event.action != 'opened'
      id: search
      uses: hashicorp/gh-action-jira-search@2b531eaa4b2380fa268fbe94b80bc92109c92d5d # v0.3.0
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_SYNC_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_SYNC_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_SYNC_API_TOKEN }}
      with:
        # cf[10089] is Issue Link custom field
        jql: 'project = "VAULT" and cf[10089]="${{ github.event.issue.html_url || github.event.pull_request.html_url }}"'

    - name: Fetch ticket status
      if: steps.search.outputs.issue
      id: status
      run: |
        status_name="$(curl --silent \
          --url "${{ secrets.JIRA_SYNC_BASE_URL }}rest/api/3/issue/${{ steps.search.outputs.issue }}?fields=status" \
          --user "${{ secrets.JIRA_SYNC_USER_EMAIL }}:${{ secrets.JIRA_SYNC_API_TOKEN }}" \
          --header "Content-Type: application/json" \
        | jq -r .fields.status.name)"
        echo "status=${status_name}" >> $GITHUB_OUTPUT

    - name: Sync comment
      if: github.event.action == 'created' && steps.search.outputs.issue
      uses: hashicorp/gh-action-jira-comment@9e4a11098f8bd0d12745708d4d4b63c5a81df2fc # v0.3.0
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_SYNC_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_SYNC_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_SYNC_API_TOKEN }}
      with:
        issue: ${{ steps.search.outputs.issue }}
        comment: "${{ github.actor }} ${{ github.event.review.state || 'commented' }}:\n\n${{ github.event.comment.body || github.event.review.body }}\n\n${{ github.event.comment.html_url || github.event.review.html_url }}"

    - name: Transitions
      id: transitions
      if: steps.search.outputs.issue
      run: |
        if [[ "${{ github.event.action }}" == "closed" || "${{ github.event.action }}" == "deleted" ]]; then
          echo "Closing ticket"
          echo "name=Closed" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event_name }}" == "issue_comment" && "${{ steps.status.outputs.status }}" == "Icebox" ]]; then
          echo "Thawing ticket"
          echo "name=Pending Triage" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event.action }}" == "reopened" ]]; then
          echo "Reopening ticket"
          echo "name=Reopen" >> $GITHUB_OUTPUT
        fi

    # Transition issue API reference: https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issues/#api-rest-api-3-issue-issueidorkey-transitions-post
    - name: Transition ticket
      if: steps.transitions.outputs.name
      run: |
        transitions="$(curl --silent \
          --url "${{ secrets.JIRA_SYNC_BASE_URL }}rest/api/3/issue/${{ steps.search.outputs.issue }}/transitions" \
          --user "${{ secrets.JIRA_SYNC_USER_EMAIL }}:${{ secrets.JIRA_SYNC_API_TOKEN }}" \
          --header "Accept: application/json")"
        id="$(echo "${transitions}" | jq -r '.transitions[] | select(.name == "${{ steps.transitions.outputs.name }}") | .id')"

        curl --show-error \
          --url "${{ secrets.JIRA_SYNC_BASE_URL }}rest/api/3/issue/${{ steps.search.outputs.issue }}/transitions" \
          --user "${{ secrets.JIRA_SYNC_USER_EMAIL }}:${{ secrets.JIRA_SYNC_API_TOKEN }}" \
          --header "Accept: application/json" \
          --header "Content-Type: application/json" \
          --data "$(printf '{"transition": {"id": "%s"}}' "${id}")"
