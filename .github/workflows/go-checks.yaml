# use like:

# name: Go checks
# on:
#   push:
# jobs:
#   go-checks:
#     # using `main` as the ref will keep your workflow up-to-date
#     uses: hashicorp/vault-workflows-common/.github/workflows/go-checks.yaml@main
#     secrets:
#       VAULT_ECO_GITHUB_TOKEN: ${{ secrets.VAULT_ECO_GITHUB_TOKEN }}


name: Run go checks

on:
  workflow_call:
    inputs:
      dir:
        description: Directory to run checks in
        type: string
        required: false
        default: "$PWD"
      gofumpt_version:
        description: 'Version of gofumpt to use'
        required: false
        type: string
        default: 'v0.5.0'
      gofumpt_exclude_patterns:
        description: List of grep patterns (comma-separated) to exclude for gofumpt check
        required: false
        type: string
        default: "vendor,pb.go"
    secrets:
      VAULT_ECO_GITHUB_TOKEN:
        required: false

jobs:
  gomod:
    name: Check that go.mod and go.sum are tidy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: .go-version
      - name: Check go.mod and go.sum tidiness
        run: |
          go mod tidy
          if [ ! -z "$(git status --porcelain go.mod go.sum)" ]; then
            echo "Need to run 'go mod tidy'";
            exit 1;
          fi
  gofumpt:
    name: Check that code matches gofumpt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: .go-version
      - name: Run gofumpt
        run: |
          echo "==> Install gofumpt ${{ inputs.gofumpt_version }}"
          go install mvdan.cc/gofumpt@${{ inputs.gofumpt_version }}
          echo "==> Checking that code complies with gofmt requirements..."

          files=$(find . -name '*.go')
          patterns='${{ inputs.gofumpt_exclude_patterns }}'
          OLDIFS=$IFS
          IFS=","
          for pattern in $patterns; do
            files=$(echo $files | grep -v $pattern);
          done
          IFS=$OLDIFS
          gofmt_files=$(gofmt -l $files)
          if [[ -n ${gofmt_files} ]]; then
              echo 'gofmt needs running on the following files:'
              echo "${gofmt_files}"
              echo "You can use the command: \`gofumpt -w\` to reformat them."
              exit 1
          fi

  security-scan:
    name: Security scan
    runs-on: ubuntu-latest
    steps:
      - name: Check for Secret availability
        shell: bash
        run: |
          if [ "${{ secrets.VAULT_ECO_GITHUB_TOKEN }}" == '' ]; then
            echo "::notice::unable to fetch security scanner; missing secret input"
            exit 1
          fi
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: .go-version
      - name: Build plugin binary
        run: |
          go build -o plugin cmd/*/main.go

      - name: Scan
        if: success()
        # https://github.com/hashicorp/security-scanner/commit/5d11070871dfd8662ad3518f922c885a1df907a7
        # has fail-on-detection which is currently unreleased
        uses: hashicorp/security-scanner@5d11070871dfd8662ad3518f922c885a1df907a7
        env:
          GH_TOKEN: ${{ secrets.VAULT_ECO_GITHUB_TOKEN }}
        with:
          binary: plugin
          fail-on-detection: true

      - name: Show security-scanner logs
        if: failure()
        run: |
          summary=$(jq -r '.runs[].results[].message.text' results.sarif | sort | uniq)
          echo "$summary"
          echo "${summary}" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
